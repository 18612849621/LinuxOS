; -------- loader & kernel --------
; loader 内容从存储盘的第二个扇区开始读
LOADER_START_SECTOR_ADDR_IN_DISK equ 0x2
; loader 加载到内存的基地址 mbr 的启动地址是 0x7c00
LOADER_BASE_ADDR_IN_MEM          equ 0x900
; loader 准备读入的扇区数目
LOADER_READ_SECTOR_NUM           equ 4
; -------- gdt 描述符属性 --------
    ; -------------高地址--------------
    ; 位的索引是从 0 开始 即第 1 位是 0
    ; 23 位(G) 两种模式 字节 / 4KB 此处设置为 4KB
    DESC_G_4K        equ 00_0000001000_0000000000_0000000000b
    ; 22 位(D) D 为 1，表示指令中的有效地址及操作数是 32 位 | 0 则是 16 位
    DESC_D_32        equ 00_0000000100_0000000000_0000000000b
    ; 21 位(L) L 为 1，表示指令中的有效地址及操作数是 64 位 | 0 则是 32 位
    DESC_L_32        equ 00_0000000000_0000000000_0000000000b
    ; 20 位(AVL) 不过这 “可用的” 是对用 户来说的，也就是操作系统可以随意用此位用不到给个默认值 0
    DESC_AVL         equ 00_0000000000_0000000000_0000000000b
    ; 19 ~ 16 位(段界限的第二部分) 全部用满空间 所以第二部分全是 1
    DESC_LIMIT_CODE  equ 00_0000000000_1111000000_0000000000b
    DESC_LIMIT_DATA  equ 00_0000000000_1111000000_0000000000b
    DESC_LIMIT_VIDEO equ 00_0000000000_0000000000_0000000000b
    ; 15 位(P) P 为 0，CPU 抛出异常处理异常 ｜ 1 则正常执行
    DESC_P_1         equ 00_0000000000_0000100000_0000000000b
    ; 14 - 13 位 DPL 四种特权级别 数字越小级别越大
    DESC_DPL_0       equ 00_0000000000_0000000000_0000000000b
    DESC_DPL_1       equ 00_0000000000_0000001000_0000000000b
    DESC_DPL_2       equ 00_0000000000_0000010000_0000000000b
    DESC_DPL_3       equ 00_0000000000_0000011000_0000000000b
    ; 12 位(S) S 为 0，表示描述符是系统段 | 1 则是代码段或数据段
    DESC_S_CODE      equ 00_0000000000_0000000100_0000000000b
    DESC_S_DATA      equ 00_0000000000_0000000100_0000000000b
    DESC_S_SYSTEM    equ 00_0000000000_0000000000_0000000000b
    ; 11 ~ 8 位(TYPE) 非系统段( S 为 0 包含代码段/数据段)只有 3 种状态码，只使用 11 ～ 9 位，8 位需要默认为 0
    ; 代码段 X: 可执行 R: 可读 C: 一致性代码段
    ; 数据段(默认可读) X: 可执行 W: 可写 E: E 为 0 表示向上扩展，即地址越来越高，通常用于代码段和数据段。E 为 1 表示向下扩展，地址越来越低，通常用于栈段
    DESC_TYPE_CODE   equ 00_0000000000_0000000010_0000000000b
    DESC_TYPE_DATA   equ 00_0000000000_0000000000_1000000000b
